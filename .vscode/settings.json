{
    "window.zoomLevel": 4,
    "workbench.iconTheme": "catppuccin-mocha",
    "accessibility.voice.speechTimeout": 5000,
    "editor.minimap.enabled": false,
    "editor.fontSize": 16,
    "editor.letterSpacing": 1.85,
    "terminal.integrated.letterSpacing": 2,
    "editor.lineHeight": 1.8,
    "editor.defaultColorDecorators": "auto",
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": "on",
    "files.autoSave": "onFocusChange",
    "editor.wordWrap": "on",
    "terminal.integrated.fontFamily": "monospace",
    "workbench.sideBar.location": "right",
    "chat.editing.alwaysSaveWithGeneratedChanges": true,
    "terminal.integrated.inheritEnv": false,
    "workbench.startupEditor": "none",
    "github.copilot.enable": {
        "*": false,
        "plaintext": false,
        "markdown": false,
        "scminput": false,
        "t": true
    },
    "github.copilot.chat.temporalContext.enabled": true,
    "github.copilot.chat.testGeneration.instructions": [
        {
            "file": ".copilot-test-instructions.md"
        }
    ],
    "git.openRepositoryInParentFolders": "always",
    "git.enableSmartCommit": true,
    "git.autofetch": true,
    "editor.renderWhitespace": "none",
    "window.customTitleBarVisibility": "auto",
    "continue.enableQuickActions": true,
    "continue.enableTabAutocomplete": false,
    "explorer.confirmDelete": false,
    "cursor.composer.renderPillsInsteadOfBlocks": true,
    "cursor.cmdk.useThemedDiffBackground": true,
    "cursor.diffs.useCharacterLevelDiffs": true,
    "cursor.terminal.usePreviewBox": true,
    "cursor.composer.collapsePaneInputBoxPills": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]",
        "FIXME "
    ],
    "sync.gist": "fbeae2435f73f875f564267fa5750ccf",
    "github.allowUnsafeSSL": true
}
// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "shift+alt+e",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "ctrl+shift+space",
        "command": "inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
    },
    {
        "key": "ctrl+k i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
    },
    {
        "key": "ctrl+shift+space",
        "command": "inlineChat.startWithCurrentLine",
        "when": "editorFocus && github.copilot.chat.editor.enableLineTrigger && inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "meta+i",
        "command": "-inlineChat.startWithCurrentLine",
        "when": "editorFocus && github.copilot.chat.editor.enableLineTrigger && inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "ctrl+i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
    },
    {
        "key": "capslock space",
        "command": "workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
    },
    {
        "key": "shift+alt+1",
        "command": "rsc-use-client.toggleSyntax",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-rsc-use-client.toggleSyntax",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+`",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "alt+r",
        "command": "editor.emmet.action.wrapWithAbbreviation"
    },
    {
        "key": "ctrl+backspace",
        "command": "-chatEditing.discardAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+backspace",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "-search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-editor.action.removeBrackets",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+a",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+d",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+d",
        "command": "deleteAllLeft"
    },
    {
        "key": "ctrl+shift+a",
        "command": "deleteAllRight"
    },
    {
        "key": "alt+x",
        "command": "editor.action.removeDuplicateLines"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+; ctrl+shift+a",
        "command": "-testing.coverageAll"
    },
    {
        "key": "shift+alt+d",
        "command": "-notebook.cell.detectLanguage",
        "when": "notebookCellEditable && notebookEditable"
    },
    {
        "key": "shift+alt+d",
        "command": "-editor.detectLanguage",
        "when": "editorTextFocus && !notebookEditable"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "capslock space",
        "command": "workbench.action.chat.open",
        "when": "chatPanelParticipantRegistered"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-workbench.action.chat.open",
        "when": "chatPanelParticipantRegistered"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+tab",
        "command": "javascript.removeUnusedImports"
    },
    {
        "key": "shift+tab",
        "command": "typescript.removeUnusedImports"
    },
    {
        "key": "ctrl+n",
        "command": "-composer.createNew",
        "when": "focusedView == 'workbench.panel.composerViewPane2.view'"
    },
    {
        "key": "alt+right",
        "command": "typescript.restartTsServer"
    },
    {
        "key": "ctrl+space",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+1",
        "command": "extension.insertUseClient"
    },
    {
        "key": "ctrl+m e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+enter",
        "command": "-python.execInREPL",
        "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
    },
    {
        "key": "ctrl+; ctrl+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-aichat.fixerrormessage",
        "when": "(arbitrary function)"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "ctrl+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+e ctrl+s",
        "command": "-sqltools.showRecords",
        "when": "!config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+e ctrl+d",
        "command": "-sqltools.describeTable",
        "when": "!config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "-sqltools.executeQuery",
        "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+e ctrl+r",
        "command": "-sqltools.deleteBookmark",
        "when": "!config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+e ctrl+h",
        "command": "-sqltools.runFromHistory",
        "when": "!config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+m ctrl+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+e ctrl+a",
        "command": "-sqltools.runFromBookmarks",
        "when": "!config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+e ctrl+q",
        "command": "-sqltools.bookmarkSelection",
        "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
    },
    {
        "key": "ctrl+e ctrl+b",
        "command": "-sqltools.formatSql",
        "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly"
    },
    {
        "key": "ctrl+shift+d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
    },
    {
        "key": "shift+delete",
        "command": "-deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.splitActiveTab",
        "when": "terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+m ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "alt+b",
        "command": "aichat.close-sidebar"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.chat.openInSidebar"
    },
    {
        "key": "ctrl+shift+g",
        "command": "git-graph.view"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-composer.fixerrormessage",
        "when": "(arbitrary function)"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.requestCompletions",
        "when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && terminalShellIntegrationEnabled"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "alt+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
    },
    {
        "key": "ctrl+space",
        "command": "composer.openAsBar"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-composer.openAsBar"
    },
    {
        "key": "alt+end alt+end",
        "command": "-repl.focusLastItemExecuted",
        "when": "isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-composer.showComposerHistory"
    },
    {
        "key": "ctrl+alt+0",
        "command": "composer.createNewChat",
        "when": "focusedView == 'workbench.panel.aichat.view'"
    },
    {
        "key": "ctrl+n",
        "command": "-composer.createNewChat",
        "when": "focusedView == 'workbench.panel.aichat.view'"
    },
    {
        "key": "ctrl+alt+[",
        "command": "aichat.focuschatpaneaction"
    },
    {
        "key": "shift+space",
        "command": "workbench.panel.aichat.view.focus"
    }
]